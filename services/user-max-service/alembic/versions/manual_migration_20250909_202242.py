"""Manual migration for user-max-service"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'manual_user_max_20250909_202242'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by manual migration - adjust for PostgreSQL! ###
    # Example user table with advanced constraints:
    # op.create_table(
    #     'users',
    #     sa.Column('id', sa.UUID(), nullable=False),
    #     sa.Column('email', sa.String(length=255), nullable=False),
    #     sa.Column('hashed_password', sa.String(length=255), nullable=False),
    #     sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    #     sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    #     sa.PrimaryKeyConstraint('id'),
    #     sa.UniqueConstraint('email')
    # )
    #
    # Example JSONB column for profile data:
    # op.add_column('users', sa.Column('profile_data', sa.JSONB(), nullable=True))
    #
    # Example index on JSONB field:
    # op.create_index('idx_user_profile', 'users', ['profile_data'], postgresql_using='gin')
    #
    # Remember to add all necessary tables, columns, indexes, and constraints
    # ### end Alembic commands ###
    pass


def downgrade():
    # ### commands auto generated by manual migration - adjust for PostgreSQL! ###
    # Reverse order of upgrade operations
    #
    # op.drop_index('idx_user_profile', table_name='users')
    # op.drop_column('users', 'profile_data')
    # op.drop_table('users')
    # ### end Alembic commands ###
    pass
